import React, { useState } from "react";
import {
  View,
  Text,
  TextInput,
  StyleSheet,
  TouchableOpacity,
  ScrollView,
} from "react-native";
import { Ionicons, MaterialIcons, FontAwesome5 } from "@expo/vector-icons";
import DateTimePicker from "@react-native-community/datetimepicker";
import dayjs from "dayjs";
import { Button } from "react-native-paper";

const dateFormat = "YYYY/MM/DD";

export default function TripScheduleAiScreen() {
  const [location, setLocation] = useState("");
  const [dates, setDates] = useState("");
  const [groupSize, setGroupSize] = useState("");
  const [specialRequest, setSpecialRequest] = useState("");
  const [foodService, setFoodService] = useState("");
  const [otherService, setOtherService] = useState("");
  const [budget, setBudget] = useState("");

  const [startDate, setStartDate] = useState(
    dayjs("2015/01/01", dateFormat).toDate()
  );
  const [endDate, setEndDate] = useState(
    dayjs("2015/01/01", dateFormat).toDate()
  );

  const [showStartPicker, setShowStartPicker] = useState(false);
  const [showEndPicker, setShowEndPicker] = useState(false);

  const handleStartChange = (event, selectedDate) => {
    setShowStartPicker(false);
    if (selectedDate) {
      setStartDate(selectedDate);
    }
  };

  const handleEndChange = (event, selectedDate) => {
    setShowEndPicker(false);
    if (selectedDate) {
      setEndDate(selectedDate);
    }
  };

  return (
    <ScrollView
      style={styles.container}
      contentContainerStyle={{ paddingBottom: 50 }}
    >
      <Text style={styles.title}>Ch·ªçn l·ªãch tr√¨nh c·ªßa b·∫°n üß≥</Text>

      {/* Th√¥ng tin chuy·∫øn ƒëi */}
      <Text style={styles.section}>Th√¥ng tin chuy·∫øn ƒëi</Text>

      <View style={styles.inputContainer}>
        <Ionicons name="location-outline" size={20} color="#2a9df4" />
        <TextInput
          placeholder="N∆°i mu·ªën du l·ªãch..."
          style={styles.input}
          value={location}
          onChangeText={setLocation}
        />
      </View>

      {/* Start Date - End Date ***************************************************/}
      <View >
        <Text variant="titleMedium" style={styles.section}>
          Ch·ªçn kho·∫£ng ng√†y:
        </Text>

        <Button
          mode="outlined"
          icon="calendar"
          onPress={() => setShowStartPicker(true)}
          style={{ marginBottom: 10 }}
        >
          Ng√†y b·∫Øt ƒë·∫ßu: {dayjs(startDate).format(dateFormat)}
        </Button>

        {showStartPicker && (
          <DateTimePicker
            value={startDate}
            mode="date"
            display="default"
            onChange={handleStartChange}
          />
        )}

        <Button
          mode="outlined"
          icon="calendar"
          onPress={() => setShowEndPicker(true)}
          style={{ marginBottom: 10 }}
        >
          Ng√†y k·∫øt th√∫c: {dayjs(endDate).format(dateFormat)}
        </Button>

        {showEndPicker && (
          <DateTimePicker
            value={endDate}
            mode="date"
            display="default"
            minimumDate={startDate}
            onChange={handleEndChange}
          />
        )}
      </View>

      {/* Nh√≥m tham gia */}
      <Text style={styles.section}>Chi ti·∫øt nh√≥m tham gia</Text>

      <View style={styles.inputContainer}>
        <Ionicons name="people-outline" size={20} color="#2a9df4" />
        <TextInput
          placeholder="S·ªë l∆∞·ª£ng ng∆∞·ªùi tham gia..."
          style={styles.input}
          value={groupSize}
          onChangeText={setGroupSize}
          keyboardType="numeric"
        />
      </View>

      <View style={styles.inputContainer}>
        <MaterialIcons name="feedback" size={20} color="#2a9df4" />
        <TextInput
          placeholder="Y√™u c·∫ßu ƒë·∫∑c bi·ªát (VD: ƒÉn chay...)"
          style={styles.input}
          value={specialRequest}
          onChangeText={setSpecialRequest}
        />
      </View>

      {/* D·ªãch v·ª• b·ªï sung */}
      <Text style={styles.section}>D·ªãch v·ª• b·ªï sung</Text>

      <View style={styles.inputContainer}>
        <FontAwesome5 name="utensils" size={20} color="#2a9df4" />
        <TextInput
          placeholder="Th√™m d·ªãch v·ª• ƒÉn u·ªëng"
          style={styles.input}
          value={foodService}
          onChangeText={setFoodService}
        />
      </View>

      <View style={styles.inputContainer}>
        <Ionicons name="construct-outline" size={20} color="#2a9df4" />
        <TextInput
          placeholder="D·ªãch v·ª• kh√°c"
          style={styles.input}
          value={otherService}
          onChangeText={setOtherService}
        />
      </View>

      {/* Chi ph√≠ d·ª± ph√≤ng */}
      <Text style={styles.section}>Chi ph√≠ d·ª± ph√≤ng</Text>

      <View style={styles.inputContainer}>
        <Ionicons name="wallet-outline" size={20} color="#2a9df4" />
        <TextInput
          placeholder="Chi ph√≠ d·ª± tr√π"
          style={styles.input}
          value={budget}
          onChangeText={setBudget}
          keyboardType="numeric"
        />
      </View>

      {/* N√∫t t√≠nh to√°n */}
      <TouchableOpacity style={styles.button}>
        <Text style={styles.buttonText}>T√≠nh to√°n chuy·∫øn ƒëi</Text>
      </TouchableOpacity>
    </ScrollView>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    padding: 16,
    backgroundColor: "#f9fcff",
  },

  title: {
    fontSize: 20,
    fontWeight: "bold",
    marginBottom: 12,
    color: "#333",
    marginTop: 20,
  },

  section: {
    fontWeight: "600",
    fontSize: 16,
    marginTop: 20,
    marginBottom: 6,
    color: "#444",
  },

  inputContainer: {
    flexDirection: "row",
    alignItems: "center",
    borderWidth: 1,
    borderColor: "#2a9df4",
    borderRadius: 8,
    paddingHorizontal: 10,
    paddingVertical: 8,
    marginBottom: 10,
    backgroundColor: "#fff",
  },

  input: {
    flex: 1,
    marginLeft: 10,
    fontSize: 14,
    color: "#333",
  },

  button: {
    marginTop: 24,
    backgroundColor: "#2a9df4",
    paddingVertical: 14,
    borderRadius: 10,
    alignItems: "center",
    elevation: 3,
  },

  buttonText: {
    color: "#fff",
    fontWeight: "bold",
    fontSize: 16,
  },
});
